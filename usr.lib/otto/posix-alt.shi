# posix-alt.shi: POSIX shell alternatives for external processes, in a single libary.
# Copyright:
# lines() added by Caio Novais <caionov08@gmail.com>, but originally it's came from Dylan Araps' pure-sh-bible;
# basename() (and already cited lines()) by Dylan Araps <https://github.com/dylanaraps> @ pure-sh-bible.
# ptimeout(), pcat(), nproc() and n() by Luiz Ant√¥nio Rangel <luiz.antonio.rangel@outlook.com.br> @ otto-pkg.
# Everything here (except what was added @ otto-pkg) was originally in MIT License, now sublicensed to Caldera/4-Clause BSD license (see LICENSE.txt).

# basename
basename(){
  DIR=${1%${1##*[!/]}}
  DIR=${DIR##*/}
  DIR=${DIR%"$2"}
  printf '%s\n' "${DIR:-/}"
}

# wc -l
lines(){
  while IFS= read -r LINE || [ -n "${LINE}" ]; do
    LINES=$[ ${LINES} + 1 ]
  done < "${1}"
  printf '%s\n' "$LINES"
  unset LINES
}

# cat
# In fact, this isn't really POSIX-friendly.
pcat(){
  < ${@}
}

# timeout
timeout(){
  "${2}" & local PID="${!}"; sleep "${1}" && kill "${PID}"
}

# nproc
nproc(){
  grep 'processor' /proc/cpuinfo | lines
}

# The # macro for arrays.
n(){
  echo ${@} | tr '' '\n' | wc -l;
}

##End of alternatives section
